# syntax=docker/dockerfile:1.7

# Base stage with tools
FROM rust:slim AS base
RUN apt-get update && \
    apt-get install -y protobuf-compiler libprotobuf-dev pkg-config libssl-dev --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Install cargo-chef for dependency caching (most important for CI)
RUN cargo install cargo-chef

# Planner stage - generates recipe for dependencies
FROM base AS planner
WORKDIR /app
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

# Builder stage - builds dependencies and application
FROM base AS builder
WORKDIR /app

# Copy the recipe from planner stage
COPY --from=planner /app/recipe.json recipe.json

# Build dependencies first (this layer gets cached by GitHub Actions)
RUN cargo chef cook --release --recipe-path recipe.json

# Copy source code and build application
COPY . .
ENV SQLX_OFFLINE=true
RUN cargo build --release

# Final runtime stage
FROM public.ecr.aws/lts/ubuntu:24.04_stable

RUN apt-get update && \
    apt-get install -y ca-certificates libudev1=255.4-1ubuntu8.8 libsystemd0=255.4-1ubuntu8.8 --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binaries from builder stage
COPY --from=builder /app/target/release/skyvault /app/skyvault
COPY --from=builder /app/target/release/worker /app/worker
COPY --from=builder /app/target/release/reset-cluster /app/reset-cluster

LABEL org.opencontainers.image.source="https://github.com/dynoinc/skyvault-rs"
LABEL org.opencontainers.image.description="Skyvault - high-performance, scalable object-store backed key-value store"

EXPOSE 50051
CMD ["/app/skyvault"]
