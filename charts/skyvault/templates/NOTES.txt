{{- define "skyvault.notes" -}}
1. Skyvault Instances:
{{- range $key, $deployment := .Values.deployments }}
{{- if $deployment.enabled }}

   Instance: {{ $deployment.instanceName }}
   -------------------------------------
   {{- if contains "NodePort" $deployment.service.type }}
   export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "skyvault.fullname" $ }}-{{ $deployment.instanceName }})
   export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
   echo http://$NODE_IP:$NODE_PORT
   {{- else if contains "LoadBalancer" $deployment.service.type }}
   NOTE: It may take a few minutes for the LoadBalancer IP to be available.
         You can watch the status of by running 'kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ include "skyvault.fullname" $ }}-{{ $deployment.instanceName }}'
   export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "skyvault.fullname" $ }}-{{ $deployment.instanceName }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
   echo http://$SERVICE_IP:{{ $deployment.service.port }}
   {{- else if contains "ClusterIP" $deployment.service.type }}
   export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "skyvault.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }},app.kubernetes.io/instance-id={{ $deployment.instanceName }}" -o jsonpath="{.items[0].metadata.name}")
   export CONTAINER_PORT=$(kubectl get pod --namespace {{ $.Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
   echo "Visit http://127.0.0.1:8080 to use your application"
   kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
   {{- end }}
{{- end }}
{{- end }}

2. Finding all instances in a deployment:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "skyvault.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=skyvault"

3. Finding a specific instance by ID:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "skyvault.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/instance-id=<INSTANCE_NAME>"

4. Shared backend services:
   DynamoDB local is available at: {{ include "skyvault.fullname" . }}-dynamodb:{{ .Values.dynamodb.service.port }}
   MinIO is available at: {{ include "skyvault.fullname" . }}-minio:{{ .Values.minio.service.port }}
     MinIO User: {{ .Values.minio.env.MINIO_ROOT_USER }}
     MinIO Password: {{ .Values.minio.env.MINIO_ROOT_PASSWORD }}
{{- end }} 