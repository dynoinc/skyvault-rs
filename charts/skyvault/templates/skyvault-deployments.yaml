{{- range $key, $deployment := .Values.deployments }}
{{- if $deployment.enabled }}
{{- $readerEnabled := eq ((get ($deployment.env | default dict) "SKYVAULT_ENABLE_READER" | default "false") | toString) "true" }}
{{- $useStatefulSet := and (eq (get ($deployment.cache | default dict) "volumeType" | default "none") "pvc") $readerEnabled }}
---
apiVersion: apps/v1
{{- if $useStatefulSet }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: skyvault-{{ $deployment.instanceName }}
  labels:
    {{- include "skyvault.labels" $ | nindent 4 }}
    app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
spec:
  replicas: {{ $deployment.replicaCount }}
  {{- if $useStatefulSet }}
  serviceName: skyvault-{{ $deployment.instanceName }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "skyvault.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
  template:
    metadata:
      labels:
        {{- include "skyvault.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
        {{- with $.Values.common.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with $deployment.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: skyvault-serviceaccount
      containers:
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.common.image.id }}"
          imagePullPolicy: {{ $.Values.common.image.pullPolicy }}
          ports:
            - name: grpc
              containerPort: {{ $deployment.service.port }}
              protocol: TCP
          resources:
            {{- toYaml $deployment.resources | nindent 12 }}
          env:
            # Common environment variables
            {{- range $key, $value := $.Values.common.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            
            # Instance-specific environment variables
            {{- range $key, $value := $deployment.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            
            - name: SKYVAULT_IMAGE_ID
              value: "{{ $.Values.common.image.id }}"
          {{- if and $readerEnabled (ne $deployment.cache.volumeType "none") }}
          volumeMounts:
            - name: cache-volume
              mountPath: /tmp/skyvault-cache
          {{- end }}
      {{- if and $readerEnabled (ne $deployment.cache.volumeType "none") (not $useStatefulSet) }}
      volumes:
        - name: cache-volume
          {{- if eq $deployment.cache.volumeType "tmpfs" }}
          emptyDir:
            medium: Memory
            sizeLimit: {{ $deployment.cache.tmpfs.sizeLimit }}
          {{- end }}
      {{- end }}
  {{- if $useStatefulSet }}
  volumeClaimTemplates:
    - metadata:
        name: cache-volume
        labels:
          {{- include "skyvault.labels" $ | nindent 10 }}
          app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
          {{- with $.Values.common.extraLabels }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with $deployment.extraLabels }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      spec:
        accessModes:
          - {{ $deployment.cache.pvc.accessMode }}
        resources:
          requests:
            storage: {{ $deployment.cache.pvc.size }}
        {{- if $deployment.cache.pvc.storageClass }}
        storageClassName: {{ $deployment.cache.pvc.storageClass }}
        {{- end }}
  {{- end }}
---
# Service for each Skyvault instance
apiVersion: v1
kind: Service
metadata:
  name: skyvault-{{ $deployment.instanceName }}
  labels:
    {{- include "skyvault.labels" $ | nindent 4 }}
    app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
spec:
  type: {{ $deployment.service.type }}
  ports:
    - port: {{ $deployment.service.port }}
      targetPort: grpc
      protocol: TCP
      name: grpc
      {{- if and (eq $deployment.service.type "NodePort") (hasKey $deployment.service "nodePort") }}
      nodePort: {{ $deployment.service.nodePort }}
      {{- end }}
  selector:
    {{- include "skyvault.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: skyvault-{{ $deployment.instanceName }}
{{- end }}
{{- end }} 