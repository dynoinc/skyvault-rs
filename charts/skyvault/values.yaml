# Helm Chart Configuration for local development

# Common configuration for all Skyvault instances
common:
  image:
    id: localhost/skyvault:dev
    pullPolicy: IfNotPresent

  # Extra labels to add to all pods
  extraLabels: {}
    # example-label: "example-value"
    # team: "platform"

  # Sensitive configuration values
  secrets:
    # AWS credentials
    AWS_ACCESS_KEY_ID: minioadmin
    AWS_SECRET_ACCESS_KEY: minioadmin
    
    # Postgres credentials
    SKYVAULT_POSTGRES_PASSWORD: postgres

  env:
    # S3
    AWS_REGION: us-east-1
    AWS_ENDPOINT_URL_S3: http://skyvault-minio:9000
    SKYVAULT_S3_BUCKET: skyvault-bucket

    # Postgres
    SKYVAULT_POSTGRES_USER: postgres
    SKYVAULT_POSTGRES_DB: skyvault
    SKYVAULT_POSTGRES_HOST: skyvault-postgres
    SKYVAULT_POSTGRES_PORT: 5432
    SKYVAULT_POSTGRES_SSLMODE: allow

    # Rust
    RUST_BACKTRACE: 1
    RUST_LOG: "skyvault=debug"

# Dynamic Configuration
dynamicConfig:
  # Number of concurrent uploads allowed in writer service
  concurrentUploads: "2"

deployments:
  reader:
    enabled: false
    instanceName: "reader"
    replicaCount: 4
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi
    service:
      type: NodePort
      port: 50051
      nodePort: 30051
    cache:
      # Volume type: "tmpfs", "pvc", or "none"
      volumeType: none
      tmpfs:
        # Size limit for tmpfs (e.g., "1Gi", "512Mi")
        sizeLimit: 1Gi
      # Configuration for PVC volume
      pvc:
        # Storage class for PVC (leave empty for default)
        storageClass: standard
        # Size of PVC (e.g., "10Gi", "5Gi")
        size: 10Gi
        # Access mode for PVC
        accessMode: ReadWriteOnce
    # Instance-specific environment variables
    env:
      SKYVAULT_ENABLE_READER: "true"
    # Extra labels specific to reader pods
    extraLabels: {}
      # reader-specific-label: "reader-value"

  writer:
    enabled: false
    instanceName: "writer"
    replicaCount: 2
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    service:
      type: NodePort
      port: 50051
      nodePort: 30052
    env:
      SKYVAULT_ENABLE_WRITER: "true"
    # Extra labels specific to writer pods
    extraLabels: {}
      # writer-specific-label: "writer-value"

  orchestrator:
    enabled: false
    instanceName: "orchestrator"
    replicaCount: 1
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 256Mi
    service:
      type: NodePort
      port: 50051
      nodePort: 30053
    env:
      SKYVAULT_ENABLE_ORCHESTRATOR: "true"
    # Extra labels specific to orchestrator pods
    extraLabels: {}
      # orchestrator-specific-label: "orchestrator-value"

# Service account configuration
serviceAccount:
  create: true
  annotations: {}

# Values for the minio service
minio:
  enabled: true
  image:
    repository: docker.io/minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 9000
    type: ClusterIP

# Values for the PostgreSQL service
postgres:
  enabled: true
  image:
    repository: docker.io/postgres
    tag: "12"
    pullPolicy: IfNotPresent
  service:
    port: 5432
    type: ClusterIP
